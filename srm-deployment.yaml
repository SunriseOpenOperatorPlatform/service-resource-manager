---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: srmcontroller
  name: srmcontroller
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: srmcontroller
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: srmcontroller
    spec:
      containers:
        - env:
            - name: KUBERNETES_MASTER_HOSTNAME
              value: k3d-sunriseop-server-0
            - name: KUBERNETES_MASTER_PASSWORD
              value: ameThyst23!
            - name: KUBERNETES_MASTER_IP
              value: k3d-sunriseop-server-0
            - name: KUBERNETES_MASTER_PORT
              value: "6443"
            - name: KUBERNETES_USERNAME
              value: cluster-admin
            - name: KUBE_CONFIG_PATH
              value: ../.kube/config
            - name: EMP_STORAGE_URI
              value: mongodb://mongopiedge:27017
            - name: KUBERNETES_MASTER_TOKEN
              value: eyJhbGciOiJSUzI1NiIsImtpZCI6IkRRS3VMNktkc1BOYk5ZeDhfSnFvVmJQdkJ6em1FODhPeHNIMHFya3JEQzgifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJkZWZhdWx0Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9zZWNyZXQubmFtZSI6InNybS1zZWNyZXQiLCJrdWJlcm5ldGVzLmlvL3NlcnZpY2VhY2NvdW50L3NlcnZpY2UtYWNjb3VudC5uYW1lIjoiY2x1c3Rlci1hZG1pbiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6ImU1MjUxZjhiLWY2ODItNDU0Ni1hOTgxLWNlNTk0YTg2NmZiNCIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDpkZWZhdWx0OmNsdXN0ZXItYWRtaW4ifQ.rnZyHFEE1ywceWqcio0UKQrp5GdfVGQOCXxx3RJpb_vvDj65GvNwN0VgA_anOlzj8kKJ9JQjWrA7an2k-5w0ycjeu8Ei_5Z0dvgRSpvKc4O5kCHddOB1kJl480hKWtZqgL0Vi6YbOziFGqvPd8hxHSTquxUgXEN2BStqII8MpVEK8z8iU2pJE5CNIaukGBozjlgc1Vb6HiEU4_UhlqG61uO6ReRVrzaYa4T1j4Zvvx1JN8t2HYcuv50QlHPrEAfW2F3ed0SBbb_X8AT0pGJrVas_uqZgMcN1j5BLO51RNmCY27ADHwCbj8HWuiHhyuLKQxYw8yKB-iMNQmq2fk3ezw
            - name: DRIVER
              value: kubernetes
            - name: ARTIFACT_MANAGER_ADDRESS
              value: http://artefact-manager-service:8000
            - name: EDGE_CLOUD_ADAPTER_NAME
              value: kubernetes
            - name: PLATFORM_PROVIDER
              value: ISI
          image: ghcr.io/sunriseopenoperatorplatform/srm/srm:1.0.0
          name: srmcontroller
          ports:
            - containerPort: 8080
          resources: {}
          imagePullPolicy: Always
      restartPolicy: Always
status: {}

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: srm
  name: srm
spec:
  type: NodePort
  ports:
    - name: "8080"
      nodePort: 32415
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: srmcontroller
status:
  loadBalancer: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: srm-ingress
  annotations:
    #traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  ingressClassName: nginx
  rules:
  - http:
        paths:
          - path: /srm
            pathType: Prefix
            backend:
              service:
                name: srm
                port:
                  number: 8080
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongodb-pv-volume  # Sets PV's name
  labels:
    type: local  # Sets PV's type to local
    app: mongopiedge
spec:
  storageClassName: manual
  capacity:
    storage: 200Mi # Sets PV Volume
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/mongodb_srm"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: mongo-db
  name: mongo-db
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: mongopiedge
  name: mongopiedge
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongopiedge
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        #io.kompose.network/netEMPkub: "true"
        io.kompose.service: mongopiedge
    spec:
      containers:
        - image: mongo
          name: mongopiedge
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: mongo-db
      restartPolicy: Always
      volumes:
        - name: mongo-db
          persistentVolumeClaim:
            claimName: mongo-db
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: mongopiedge
  name: mongopiedge
spec:
  type: ClusterIP
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongopiedge
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: oegcontroller
  name: oegcontroller
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: oegcontroller
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.service: oegcontroller
    spec:
      containers:
        - env:
            - name: MONGO_URI
              value: mongodb://oegmongo/sample_db?authSource=admin
            - name: SRM_HOST
              value: http://srm:8080/piedge-connector/2.0.0
            - name: FEDERATION_MANAGER_HOST
              value: http://federation-manager:8989
            #- name: PI_EDGE_USERNAME
            #  value: username
            #- name: PI_EDGE_PASSWORD
            #  value: password
            #- name: HTTP_PROXY
            #  value: http://proxy
          image: ghcr.io/sunriseopenoperatorplatform/oeg/oeg
          name: oegcontroller
          ports:
            - containerPort: 8080
          resources: {}
          imagePullPolicy: Always
      restartPolicy: Always

status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: oeg
  name: oeg
spec:
  type: NodePort
  ports:
    - name: "8080"
      nodePort: 32414
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: oegcontroller
status:
  loadBalancer: {}

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: oeg-ingress
  annotations:
    #traefik.ingress.kubernetes.io/router.entrypoints: web
spec:
  ingressClassName: nginx
  rules:
  - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: oeg
                port:
                  number: 8080
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: oegmongodb-pv-volume  # Sets PV's name
  labels:
    type: local  # Sets PV's type to local
    app: oegmongo
spec:
  storageClassName: manual
  capacity:
    storage: 200Mi # Sets PV Volume
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/mongodb_oeg"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: oegmongo
  name: oeg-mongo-db
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 200Mi
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: oegmongo
  name: oegmongo
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: oegmongo
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        #io.kompose.network/netEMPkub: "true"
        io.kompose.service: oegmongo
    spec:
      containers:
        - image: mongo
          name: oegmongo
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: mongo-db
      restartPolicy: Always
      volumes:
        - name: mongo-db
          persistentVolumeClaim:
            claimName: oeg-mongo-db
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: oegmongo
  name: oegmongo
spec:
  type: ClusterIP
  ports:
    - name: "27018"
      port: 27018
      targetPort: 27017
  selector:
    io.kompose.service: oegmongo
status:
  loadBalancer: {}
---
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: artefact-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artefact-manager
  template:
    metadata:
      labels:
        app: artefact-manager
    spec:
      containers:
      - name: artefact-manager
        image: ghcr.io/sunriseopenoperatorplatform/artefactmanager:0.5
        ports:
        - containerPort: 8000
        env:
        - name: PYTHONPATH
          value: "/app"
---
apiVersion: v1
kind: Service
metadata:
  name: artefact-manager-service
spec:
  type: ClusterIP
  selector:
    app: artefact-manager
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
---
kind: Secret
apiVersion: v1
metadata:
  name: federation-manager-config
data:
  config.cfg: >-
    W2tleWNsb2FrXQpjbGllbnQxX2lkID0gb3JpZ2luYXRpbmctb3AtMQpjbGllbnQxX3NlY3JldCA9IGRkN3ZOd0Zxak5wWXdhZ2hsRXdNYncxMGcwa2xXREhiCmNsaWVudDJfaWQgPSBvcmlnaW5hdGluZy1vcC0yCmNsaWVudDJfc2VjcmV0ID0gMm1oem5FUmZXY2xMRHVWb2pZNzdMcDRRZDJyNGU4TXMKc2NvcGUgPSBmZWQtbWdtdAoKW3NlcnZlcl0KaG9zdCA9IDEyNy4wLjAuMQpwb3J0ID0gODk4OQpwcmVmaXggPSBhcGkKdmVyc2lvbiA9IHYxLjAKcHJvdG9jb2wgPSBodHRwCgpbbW9uZ29kYl0KaG9zdCA9IG1vbmdvZGIubW9uZ29kYi5zdmMuY2x1c3Rlci5sb2NhbApwb3J0ID0gMjcwMTcKCltpMmVkZ2VdCmhvc3QgPSAxOTIuMTY4LjEyMy4yMzcKcG9ydCA9IDMwNzYwCgpbb3BfZGF0YV0KcGFydG5lck9QRmVkZXJhdGlvbklkID0gaTJjYXQKcGFydG5lck9QQ291bnRyeUNvZGUgPSBFUwpwYXJ0bmVyT1BNb2JpbGVOZXR3b3JrQ29kZV9NQ0MgPSAwMDEKcGFydG5lck9QTW9iaWxlTmV0d29ya0NvZGVfTU5DID0gMDEKcGFydG5lck9QRml4ZWROZXR3b3JrQ29kZSA9IDM0CnBsYXRmb3JtQ2FwcyA9IGhvbWVSb3V0aW5nCmVkZ2VEaXNjb3ZlcnlTZXJ2aWNlRW5kUG9pbnRfcG9ydCA9CmVkZ2VEaXNjb3ZlcnlTZXJ2aWNlRW5kUG9pbnRfZnFkbiA9IGRpc2NvdmVyeS5vcGVyYXRvcjEuY29tCmVkZ2VEaXNjb3ZlcnlTZXJ2aWNlRW5kUG9pbnRfaXB2NEFkZHJlc3NlcyA9CmVkZ2VEaXNjb3ZlcnlTZXJ2aWNlRW5kUG9pbnRfaXB2NkFkZHJlc3NlcyA9CmxjbVNlcnZpY2VFbmRQb2ludF9wb3J0ID0gODk4OQpsY21TZXJ2aWNlRW5kUG9pbnRfZnFkbiA9CmxjbVNlcnZpY2VFbmRQb2ludF9pcHY0QWRkcmVzc2VzID0gMTI3LjAuMC4xCmxjbVNlcnZpY2VFbmRQb2ludF9pcHY2QWRkcmVzc2VzID0KCltwYXJ0bmVyX29wXQojIERlZmluZXMgdGhlIHJvbGUgb2YgdGhlIEZlZGVyYXRpb24gTWFuYWdlcgpwYXJ0bmVyX29wX2hvc3QgPSAxMjcuMC4wLjEKcGFydG5lcl9vcF9zZXJ2ZXIgPSAvb3BlcmF0b3JwbGF0Zm9ybS9mZWRlcmF0aW9uL3YxCnBhcnRuZXJfb3BfcG9ydCA9IDg5OTAKI3JvbGUgPSBvcmlnaW5hdGluZ19vcApyb2xlID0gcGFydG5lcl9vcA==
type: Opaque
---
kind: Deployment
apiVersion: apps/v1
metadata:
  labels:
    app: federation-manager
  name: federation-manager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: federation-manager
  template:
    metadata:
      labels:
        app: federation-manager
    spec:
      containers:
      - name: federation-manager
        image: ghcr.io/sunriseopenoperatorplatform/federation-manager:0.0.1
        imagePullPolicy: Always
        volumeMounts:
          - name: config
            readOnly: false
            mountPath: /usr/app/src/conf/
        ports:
        - containerPort: 8989
          protocol: TCP
        resources:
          requests:
            cpu: "2"
            memory: "4Gi"
          limits:
            cpu: "4"
            memory: "6Gi"
      imagePullSecrets:
      - name: federation-manager-regcred
      volumes:
        - name: config
          secret:
            secretName: federation-manager-config
            defaultMode: 420
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: federation-manager
  name: federation-manager
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 8989
    protocol: TCP
    targetPort: 8989
  selector:
    app: federation-manager
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: keycloak-config
data:
  realm-import.json: |
    {
      "realm": "federation",
      "enabled": true,
      "clientScopes" : [
        {
          "id" : "439d9c71-8a8a-469c-9280-058016000cc2",
          "name" : "fed-mgmt",
          "protocol": "openid-connect",
          "description" : "fed-mgmt"
        }
      ],
      "clients": [
        {
          "clientId": "originating-op-1",
          "enabled": true,
          "clientAuthenticatorType": "client-secret",
          "secret": "dd7vNwFqjNpYwaghlEwMbw10g0klWDHb",
          "redirectUris": ["http://localhost:8080/*"],
          "publicClient": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "defaultClientScopes": ["fed-mgmt"],
          "webOrigins": ["*"]
        }
      ]
    }
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:26.1.4
          ports:
            - containerPort: 8080
          args: [ "start-dev", "--import-realm" ]
          env:
            - name: KC_BOOTSTRAP_ADMIN_USERNAME
              value: admin
            - name: KC_BOOTSTRAP_ADMIN_PASSWORD
              value: admin
            - name: KC_IMPORT
              value: /opt/keycloak/data/import/realm-import.json
          volumeMounts:
            - name: realm-import
              mountPath: /opt/keycloak/data/import/
      volumes:
        - name: realm-import
          configMap:
            name: keycloak-config
---
kind: Service
apiVersion: v1
metadata:
  name: keycloak
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      nodePort: 30081
  selector:
    app: keycloak
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: mongodb
spec:
  capacity:
    storage: 1Gi
  hostPath:
    path: /tmp/db
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: mongodb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: mongodb
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      volumes:
        - name: storage
          persistentVolumeClaim:
            claimName: mongodb
      containers:
        - name: mongodb
          image: 'mongo:7.0'
          ports:
            - containerPort: 27017
              protocol: TCP
          env:
            - name: MONGO_INITDB_DATABASE
              value: federation-manager
            - name: MONGODB_DATA_DIR
              value: /data/db
            - name: MONDODB_LOG_DIR
              value: /dev/null
          volumeMounts:
            - name: storage
              mountPath: /data/db
          imagePullPolicy: IfNotPresent
---
kind: Service
apiVersion: v1
metadata:
  name: mongodb
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
      nodePort: 30017
  selector:
    app: mongodb